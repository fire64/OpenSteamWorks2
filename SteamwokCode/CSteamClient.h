class CSteamClient
{
	virtual HSteamPipe CreateSteamPipe() = 0;
	virtual bool BReleaseSteamPipe(HSteamPipe hSteamPipe) = 0;
	virtual HSteamUser CreateGlobalUser(HSteamPipe* phSteamPipe) = 0;
	virtual HSteamUser ConnectToGlobalUser(HSteamPipe hSteamPipe) = 0;
	virtual HSteamUser CreateLocalUser(HSteamPipe* phSteamPipe, EAccountType eAccountType) = 0;
	virtual void CreatePipeToLocalUser(HSteamUser hSteamUser, HSteamPipe* phSteamPipe) = 0;
	virtual void ReleaseUser( HSteamPipe hSteamPipe, HSteamUser hUser ) = 0;
	virtual bool IsValidHSteamUserPipe( HSteamPipe hSteamPipe, HSteamUser hUser ) = 0;
	virtual IClientUser *GetIClientUser( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientGameServer *GetIClientGameServer( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual void SetLocalIPBinding( const &SteamIPAddress_t pIPAddr, uint16 usPort ) = 0;
	virtual char const* GetUniverseName( EUniverse eUniverse ) = 0;
	virtual IClientFriends *GetIClientFriends( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientUtils *GetIClientUtils( HSteamPipe hSteamPipe ) = 0;
	virtual IClientBilling *GetIClientBilling( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientMatchmaking *GetIClientMatchmaking( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientApps *GetIClientApps( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientMatchmakingServers *GetIClientMatchmakingServers( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientGameSearch *GetIClientGameSearch( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual void RunFrame() = 0;
	virtual uint32 GetIPCCallCount() = 0;
	virtual IClientUserStats *GetIClientUserStats( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientGameServerStats *GetIClientGameServerStats( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientNetworking *GetIClientNetworking( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientRemoteStorage *GetIClientRemoteStorage( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientScreenshots *GetIClientScreenshots( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual void SetWarningMessageHook( SteamAPIWarningMessageHook_t pFunction ) = 0;
	virtual IClientGameCoordinator *GetIClientGameCoordinator( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual void SetOverlayNotificationPosition( ENotificationPosition eNotificationPosition ) = 0;
	virtual void SetOverlayNotificationInset(int nHorizontalInset, int nVerticalInset) = 0;
	virtual void HookScreenshots(bool bHook) = 0;
	virtual bool IsScreenshotsHooked() = 0;
	virtual bool IsOverlayEnabled() = 0;
	virtual bool GetAPICallResult( HSteamPipe hSteamPipe, SteamAPICall_t hSteamAPICall, void* pCallback, int cubCallback, int iCallbackExpected, bool* pbFailed ) = 0;
	virtual IClientProductBuilder *GetIClientProductBuilder( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientDepotBuilder *GetIClientDepotBuilder( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientNetworkDeviceManager *GetIClientNetworkDeviceManager( HSteamPipe hSteamPipe ) = 0;
	virtual void ConCommandInit( IConCommandBaseAccessor *pAccessor ) = 0;
	virtual IClientAppManager *GetIClientAppManager( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientConfigStore  *GetIClientConfigStore( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual bool BOverlayNeedsPresent() = 0;
	virtual IClientGameStats *GetIClientGameStats( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientHTTP *GetIClientHTTP( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual unknown_ret FlushBeforeValidate() = 0;
	virtual bool BShutdownIfAllPipesClosed() = 0;
	virtual IClientAudio *GetIClientAudio( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientMusic *GetIClientMusic( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientUnifiedMessages *GetIClientUnifiedMessages( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientController *GetIClientController( HSteamPipe hSteamPipe ) = 0;
	virtual IClientParentalSettings *GetIClientParentalSettings( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientStreamLauncher *GetIClientStreamLauncher( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientDeviceAuth *GetIClientDeviceAuth( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientRemoteClientManager *GetIClientRemoteClientManager( HSteamPipe hSteamPipe ) = 0;
	virtual IClientStreamClient *GetIClientStreamClient( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientShortcuts *GetIClientShortcuts( HSteamUser hSteamUser, HSteamPipe hSteamPipe ) = 0;
	virtual IClientUGC *GetIClientUGC(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientInventory *GetIClientInventory(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientVR *GetIClientVR(HSteamPipe hSteamPipe) = 0;
	virtual IClientGameNotifications *GetIClientGameNotifications(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientHTMLSurface *GetIClientHTMLSurface(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientVideo *GetIClientVideo(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientControllerSerialized *GetIClientControllerSerialized(HSteamPipe hSteamPipe) = 0;
	virtual IClientAppDisableUpdate *GetIClientAppDisableUpdate(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual void Set_Client_API_CCheckCallbackRegisteredInProcess( SteamAPI_CheckCallbackRegistered_t func ) = 0;
	virtual IClientBluetoothManager *GetIClientBluetoothManager(HSteamPipe hSteamPipe) = 0;
	virtual IClientSharedConnection *GetIClientSharedConnection(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientShader *GetIClientShader(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientNetworkingSocketsSerialize *GetIClientNetworkingSocketsSerialized(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientCompat *GetIClientCompat(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual unknown_ret SetClientCommandLine( int32, char ** ) = 0;
	virtual IClientParties *GetIClientParties(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientNetworkingMessages *GetIClientNetworkingMessages(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientNetworkingSockets *GetIClientNetworkingSockets(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientNetworkingUtils *GetIClientNetworkingUtils(HSteamPipe hSteamPipe) = 0;
	virtual IClientNetworkingUtilsSerialized *GetIClientNetworkingUtilsSerialized(HSteamPipe hSteamPipe) = 0;
	virtual IClientSTARInternal *GetIClientSTARInternal(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual IClientRemotePlay *GetIClientRemotePlay(HSteamUser hSteamUser, HSteamPipe hSteamPipe) = 0;
	virtual unknown_ret ~CSteamClient() = 0;
	virtual unknown_ret ~CSteamClient() = 0;
	virtual unknown_ret GetIPCServerMap() = 0;
	virtual unknown_ret OnDebugTextArrived( char const* ) = 0;
	virtual unknown_ret OnThreadLocalRegistration() = 0;
	virtual unknown_ret OnThreadBuffersOverLimit() = 0;
};

